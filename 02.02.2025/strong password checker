#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <math.h>

int strongPasswordChecker(char* password) {
    int length = strlen(password);
    int hasLower = 0, hasUpper = 0, hasDigit = 0;
    int operations = 0, replaceNeeded = 0, toAdd = 0, toDelete = 0;

    int repeat[3] = {0, 0, 0};

    for (int i = 0; i < length;) {
        if (islower(password[i])) hasLower = 1;
        if (isupper(password[i])) hasUpper = 1;
        if (isdigit(password[i])) hasDigit = 1;

        int j = i;
        while (i < length && password[i] == password[j]) i++;

        int seqLength = i - j;
        if (seqLength >= 3) {
            replaceNeeded += seqLength / 3;
            repeat[seqLength % 3]++;
        }
    }

    int categoriesMissing = 3 - (hasLower + hasUpper + hasDigit);

    if (length < 6) {
        toAdd = 6 - length;
        operations = fmax(toAdd, categoriesMissing);
    } else if (length <= 20) {
        operations = fmax(replaceNeeded, categoriesMissing);
    } else {
        toDelete = length - 20;
        int reduceReplace = fmax(0, toDelete);

        for (int i = 0; i < 3; i++) {
            if (i < 2) {
                int numSeqs = fmin(reduceReplace / (i + 1), repeat[i]);
                reduceReplace -= numSeqs * (i + 1);
                replaceNeeded -= numSeqs;
            } else {
                replaceNeeded -= reduceReplace / 3;
            }
        }

        operations = toDelete + fmax(categoriesMissing, replaceNeeded);
    }

    return operations;
}
