class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        def sort_arr(arr):
            if len(arr) > 1:
                mid = len(arr) // 2 
                L = arr[:mid]
                R = arr[mid:]
                sort_arr(L)
                sort_arr(R)

                i = j = k = 0
                while i < len(L) and j < len(R):
                    if L[i] < R[j]:
                        arr[k] = L[i]
                        i += 1
                    else:
                        arr[k] = R[j]
                        j += 1
                    k += 1

                while i < len(L):
                    arr[k] = L[i]
                    k += 1
                    i += 1

                while j < len(R):
                    arr[k] = R[j]
                    k += 1
                    j += 1

            return arr

        array = sort_arr(nums1 + nums2)
        length = len(array)
        mid = length // 2

        if (length % 2) != 0:
            return float(array[mid])

        else:
            return (float(array[mid]) + float(array[mid - 1])) / 2
