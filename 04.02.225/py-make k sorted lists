# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeKLists(self, lists):
        heap = []
        for node in lists:
            if node:
                heapq.heappush(heap, (node.val, id(node), node))
        dummy = ListNode(0)
        current = dummy
        
        while heap:
            value, _, poppedNode = heapq.heappop(heap)
            current.next = poppedNode
            current = current.next
            if poppedNode.next:
                heapq.heappush(heap, (poppedNode.next.val, id(poppedNode.next), poppedNode.next))
        
        return dummy.next       
        """
        :type lists: List[Optional[ListNode]]
        :rtype: Optional[ListNode]
        """
        
